import usb.core
import usb.util
import usb.control

vendor=0x0c45
product=0x8513
prefix = [0x04]


#Keycodes
keys = {
    'a' : ([0xd5], [0xc0]),
    's' : ([0xd8], [0xc3]),
    'd' : ([0xdb], [0xc6]),
    'f' : ([0xde], [0xc9]),
    'g' : ([0xe1], [0xcc]),

    }

dev = usb.core.find(idVendor=vendor, idProduct=product)
if dev is None:
    print("Keyboard not found")
    exit()

def detach_device():
    try:
        dev.detach_kernel_driver(0)
        dev.detach_kernel_driver(1)
        dev.set_configuration(1)
    except Exception as exception:
        print("Failed to detach device: " + str(exception))

def reattach_device():
    try:
        usb.util.dispose_resources(dev)
        dev.attach_kernel_driver(0)
        dev.attach_kernel_driver(1)
    except Exception as exception:
        print("Failed to reattach device: " + str(exception))

def change_light(button, color):
    msg = prefix + keys[button][0] + [0x01, 0x11, 0x03] + keys[button][1] + [0x02, 0x00] + color
    while len(msg) < 64: #fill msg with zeros to 64 bytes
        msg = msg + [0x00]
    return msg

def choose_color(red, green, blue):
    return [red, green, blue]

def send_packet(msg):
    open = [0x04, 0x01, 0x00, 0x01] + [0x00]*60
    close = [0x04, 0x02, 0x00, 0x02] + [0x00]*60

    detach_device()
    dev.ctrl_transfer(0x21, 9, 0x0204, 1, open)
    dev.ctrl_transfer(0x21, 9, 0x0204, 1, msg)
    dev.ctrl_transfer(0x21, 9, 0x0204, 1, close)
    reattach_device()



#pd1 = [0x04, 0xd5, 0x01, 0x11, 0x03, 0xc0, 0x02, 0x00, 0xff] + [0x00]*55   #a red
#pda = [0x04] + a[0] + [0x01, 0x11, 0x03] + a[1] + [0x02, 0x00, 0x00, 0xff] + [0x00]*54  #a green
#pd1 = [0x04, 0xd8, 0x01, 0x11, 0x03, 0xc3, 0x02, 0x00, 0xff] + [0x00]*55   #s red
#pd1 = [0x04, 0xdb, 0x01, 0x11, 0x03, 0xc6, 0x02, 0x00, 0xff] + [0x00]*55   #d red
#pd1 = [0x04, 0x96, 0x01, 0x11, 0x03, 0x81, 0x02, 0x00, 0xff] + [0x00]*55   #q red
#pd1 = [0x04, 0x18, 0x01, 0x11, 0x03, 0x02, 0x03, 0x00, 0xff] + [0x00]*55   #z red
#pd1 = [0x04, 0x57, 0x01, 0x11, 0x03, 0x41, 0x03, 0x00, 0xff] + [0x00]*55   #alt red
#pd1 = [0x04, 0x5a, 0x01, 0x11, 0x03, 0x44, 0x03, 0x00, 0xff] + [0x00]*55   #space red
#pd1 = [0x04, 0x57, 0x01, 0x11, 0x03, 0x42, 0x02, 0x00, 0xff] + [0x00]*55   #1 red
#pd1 = [0x04, 0x5a, 0x01, 0x11, 0x03, 0x45, 0x02, 0x00, 0xff] + [0x00]*55   #2 red
#pd1 = [0x04, 0x5d, 0x01, 0x11, 0x03, 0x48, 0x02, 0x00, 0xff] + [0x00]*55   #3 red

#pd1 = [0x04, 0x39, 0x10, 0x11, 0x36, 0x00, 0x02, 0x00, 0xff, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00, 0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00]
#pd2 = [0x04, 0x70, 0x0f, 0x11, 0x36, 0x00, 0x02, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00]

#dev.ctrl_transfer(0x21, 9, 0x0204, 1, pda)
#dev.ctrl_transfer(0x21, 9, 0x0204, 1, pd1)
#dev.ctrl_transfer(0x21, 9, 0x0204, 1, pd2)
#dev.ctrl_transfer(0x21, 9, 0x0204, 1, pdz)


def main():
    button = input("Select button: ")
    if type(button) != str or len(button) > 7: #change to "button not in keycodes"
        print("Button doesn't exist")
        exit()

    try:
        red = int(input("Red value (0-255):  "))
        green = int(input("Green value (0-255):  "))
        blue = int(input("Blue value (0-255):  "))
    except ValueError:
        print("Wrong color value")
        exit()
    if (red or green or blue) > 255 or (red or green or blue) < 0:
        print("Wrong color value")
        exit()

    msg = change_light(button, choose_color(red, green, blue))
    send_packet(msg)


main()